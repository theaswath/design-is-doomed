{"remainingRequest":"W:\\Assingnments\\Year 4\\Thesis 1\\Design Is Doomed\\design-is-doomed\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\Assingnments\\Year 4\\Thesis 1\\Design Is Doomed\\design-is-doomed\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"W:\\Assingnments\\Year 4\\Thesis 1\\Design Is Doomed\\design-is-doomed\\src\\views\\Home.vue","mtime":1605682594035},{"path":"W:\\Assingnments\\Year 4\\Thesis 1\\Design Is Doomed\\design-is-doomed\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\Assingnments\\Year 4\\Thesis 1\\Design Is Doomed\\design-is-doomed\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"W:\\Assingnments\\Year 4\\Thesis 1\\Design Is Doomed\\design-is-doomed\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\Assingnments\\Year 4\\Thesis 1\\Design Is Doomed\\design-is-doomed\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}